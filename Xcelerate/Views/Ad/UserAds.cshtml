@using Xcelerate.Infrastructure.Data.Enums
@model AdInformationViewModel

<link rel="stylesheet" href="~/css/Ad/UserAds.css" asp-append-version="true" />
<form class="filters" method="get">
	<article class="filter-card">
		<h1 class="title-text">Filter and Sort your search!</h1>
		<section class="information-inputs">
			<div class="form-input">
				<label for="sorting">Sorting</label>
				<select name="sorting" id="sorting" onchange="this.form.submit()">
					<option value="0">Default</option>
					<option value="1">Price Ascending</option>
					<option value="2">Price Descending</option>
					<option value="3">Year Ascending</option>
					<option value="4">Year Descending</option>
					<!-- Add other sorting options as needed -->
				</select>
			</div>

			<div class="form-input">
				<label asp-for="@Model.Brand">Brand</label>
				<select name="Brand" asp-for="@Model.Brand" id="brand-select" onchange="this.form.submit()">
					@foreach (var brandType in Enum.GetValues(typeof(BrandsEnum)))
					{
						<option value="@brandType">@brandType</option>
					}
				</select>
				<span asp-validation-for="@Model.Brand" class="text-danger"></span>
			</div>

			<div class="form-input">
				<label for="model">Model</label>
				<input type="text" name="model" id="model" value="@Model.Model" placeholder="Enter model">
			</div>

			<div class="form-input">
				<label for="minHorsePower">Min HP</label>
				<input type="number" name="minHorsePower" id="minHorsePower" value="@Model.MinHorsePower" placeholder="Enter min hp">
			</div>
			<div class="form-input">
				<label for="maxHorsePower">Max HP</label>
				<input type="number" name="maxHorsePower" id="maxHorsePower" value="@Model.MaxHorsePower" placeholder="Enter max hp">
			</div>

			<div class="form-input">
				<label for="minPrice">Min Price</label>
				<input type="number" name="minPrice" id="minPrice" value="@Model.MinPrice" placeholder="Enter min price">
			</div>
			<div class="form-input">
				<label for="maxPrice">Max Price</label>
				<input type="number" name="maxPrice" id="maxPrice" value="@Model.MaxPrice" placeholder="Enter max price">
			</div>

			<div class="form-input">
				<label for="minMileage">Min Mileage</label>
				<input type="number" name="minMileage" id="minMileage" value="@Model.MinMileage" placeholder="Enter min mileage">
			</div>
			<div class="form-input">
				<label for="maxMileage">Max Mileage</label>
				<input type="number" name="maxMileage" id="maxMileage" value="@Model.MaxMileage" placeholder="Enter max mileage">
			</div>

			<div class="form-input">
				<label for="endYear">End Year</label>
				<select name="endYear" id="endYear">
					<option value="">Select End Year</option>
					@{
						var endCurrentYear = DateTime.Now.Year;
						for (int year = endCurrentYear; year >= 1900; year--)
						{
							if (Model.EndYear == year)
							{
								<text>
								<option value="@year" selected>@year</option></text>
							}
							else
							{
								<text>
								<option value="@year">@year</option></text>
							}
						}
					}
				</select>
			</div>
			<div class="form-input">
				<label for="startYear">Start Year</label>
				<select name="startYear" id="startYear">
					<option value="">Select Start Year</option>
					@{
						var startCurrentYear = DateTime.Now.Year;
						for (int year = startCurrentYear; year >= 1900; year--)
						{
							if (Model.StartYear == year)
							{
								<text>
								<option value="@year" selected>@year</option></text>
							}
							else
							{
								<text>
								<option value="@year">@year</option></text>
							}
						}
					}
				</select>
			</div>

			<div class="second-form-inputs">

				<div class="form-input">
					<label asp-for="@Model.EuroStandard">Euro Standard</label>
					<select name="EuroStandard" asp-for="@Model.EuroStandard" id="eurostandard-select" onchange="this.form.submit()">
						@foreach (var standard in Enum.GetValues(typeof(EuroStandardEnum)))
						{
							<option value="@standard">@standard</option>
						}
					</select>
					<span asp-validation-for="@Model.EuroStandard" class="text-danger"></span>
				</div>
				<div class="form-input">
					<label asp-for="@Model.FuelType">Fuel Type</label>
					<select name="FuelType" asp-for="@Model.FuelType" id="fueltype-select" onchange="this.form.submit()">
						@foreach (var fuelType in Enum.GetValues(typeof(FuelTypeEnum)))
						{
							<option value="@fuelType">@fuelType</option>
						}
					</select>
					<span asp-validation-for="@Model.FuelType" class="text-danger"></span>
				</div>

				<div class="form-input">
					<label asp-for="@Model.Colour">Colour</label>
					<select name="Colour" asp-for="@Model.Colour" id="colour-select" onchange="this.form.submit()">
						@foreach (var colour in Enum.GetValues(typeof(ColourEnum)))
						{
							<option value="@colour">@colour</option>
						}
					</select>
					<span asp-validation-for="@Model.Colour" class="text-danger"></span>
				</div>

				<div class="form-input">
					<label asp-for="@Model.Transmission">Transmission</label>
					<select name="Transmission" asp-for="@Model.Transmission" id="transmission-select" onchange="this.form.submit()">
						@foreach (var transmission in Enum.GetValues(typeof(TransmissionEnum)))
						{
							<option value="@transmission">@transmission</option>
						}
					</select>
					<span asp-validation-for="@Model.Transmission" class="text-danger"></span>
				</div>

				<div class="form-input">
					<label asp-for="@Model.DriveTrain">Drive Train</label>
					<select name="DriveTrain" asp-for="@Model.DriveTrain" id="drivetrain-select" onchange="this.form.submit()">
						@foreach (var driveTrainType in Enum.GetValues(typeof(DriveTrainEnum)))
						{
							<option value="@driveTrainType">@driveTrainType</option>
						}
					</select>
					<span asp-validation-for="@Model.DriveTrain" class="text-danger"></span>
				</div>

				<div class="form-input">
					<label asp-for="@Model.BodyType">Body Type</label>
					<select name="BodyType" asp-for="@Model.BodyType" id="bodytype-select" onchange="this.form.submit()">
						@foreach (var bodyType in Enum.GetValues(typeof(BodyTypeEnum)))
						{
							<option value="@bodyType">@bodyType</option>
						}
					</select>
					<span asp-validation-for="@Model.BodyType" class="text-danger"></span>
				</div>

				<div class="form-input">
					<label asp-for="@Model.Condition">Condition</label>
					<select name="Condition" asp-for="@Model.Condition" id="condition-select" onchange="this.form.submit()">
						@foreach (var condition in Enum.GetValues(typeof(ConditionEnum)))
						{
							<option value="@condition">@condition</option>
						}
					</select>
					<span asp-validation-for="@Model.Condition" class="text-danger"></span>
				</div>

			</div>


			<div>
				<button class="filter-button" type="submit">Apply Filter</button>
			</div>

		</section>
	</article>
</form>

<section>
	<partial name="_AllUserCarAds" model="Model.Ads">
	</partial>
</section>

<div class="pagination-container">
	@if (Model.Pager.TotalPages > 0)
	{

		<ul class="page-list">
			@if (Model.Pager.CurrentPage > Model.Pager.StartPage)
			{
				<li class="page-item">
					<a class="page-link"
					   href="@Url.Action("UserAds", "Ad", new
                            {
                                currentPage = Model.Pager.CurrentPage - 1,
								year = Model.Year,
								EuroStandard = Model.EuroStandard,
								fuelType = Model.FuelType,
								colour = Model.Colour,
								transmission = Model.Transmission,
								driveTrain = Model.DriveTrain,
								bodyType = Model.BodyType,
								condition = Model.Condition
                            })">Previous</a>
				</li>
			}

			@for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
			{
				<li class="page-item">
					<a class="page-link @(page == Model.Pager.CurrentPage ? "active" : "")"
					   href="@Url.Action("UserAds", "Ad", new{
                                currentPage = page,
								year = Model.Year,
								EuroStandard = Model.EuroStandard,
								fuelType = Model.FuelType,
								colour = Model.Colour,
								transmission = Model.Transmission,
								driveTrain = Model.DriveTrain,
								bodyType = Model.BodyType,
								condition = Model.Condition,
								minPrice = Model.MinPrice,
                                maxPrice = Model.MaxPrice,
                                startYear = Model.StartYear,
                                endYear = Model.EndYear,
								minHorsePower = Model.MinHorsePower,
								maxHorsePower = Model.MaxHorsePower,
								brand = Model.Brand,
                                minMileage = Model.MinMileage,
                                maxMileage = Model.MaxMileage,
                                sorting = Model.Sorting
                            })">@(page)</a>
				</li>
			}

			@if (Model.Pager.CurrentPage < Model.Pager.EndPage)
			{
				<li class="page-item">
					<a class="page-link"
					   href="@Url.Action("UserAds", "Ad", new{
                                currentPage = Model.Pager.CurrentPage + 1,
								year = Model.Year,
								EuroStandard = Model.EuroStandard,
								fuelType = Model.FuelType,
								colour = Model.Colour,
								transmission = Model.Transmission,
								driveTrain = Model.DriveTrain,
								bodyType = Model.BodyType,
								condition = Model.Condition,
								minPrice = Model.MinPrice,
                                maxPrice = Model.MaxPrice,
                                startYear = Model.StartYear,
                                endYear = Model.EndYear,
								minHorsePower = Model.MinHorsePower,
								maxHorsePower = Model.MaxHorsePower,
								brand = Model.Brand,
                                minMileage = Model.MinMileage,
                                maxMileage = Model.MaxMileage,
                                sorting = Model.Sorting
                            })">Next</a>
				</li>
			}
		</ul>
	}
</div>

@if (TempData["DeleteMessage"] != null && (bool)TempData["DeleteMessage"])
{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		Swal.fire({
			icon: 'success',
			title: 'Ad deleted!',
			text: 'You have succesfully deleted an ad!',
		});
	</script>
	@TempData.Remove("DeleteMessage")
	;
}

@if (TempData["AdCreatedSuccesfully"] != null && (bool)TempData["AdCreatedSuccesfully"])
{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		Swal.fire({
			icon: 'success',
			title: 'Ad created!',
			text: 'You have succesfully created an ad!',
		});
	</script>
	@TempData.Remove("AdCreatedSuccesfully")
	;
}

@if (TempData["ConfirmDelete"] != null && (bool)TempData["ConfirmDelete"])
{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		Swal.fire({
			title: 'Confirm Delete',
			text: 'Are you sure you want to delete this car ad?',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#d33',
			cancelButtonColor: '#3085d6',
			confirmButtonText: 'Yes, delete it!'
		}).then((result) => {
			if (result.isConfirmed) {

				var form = document.createElement('form');
				form.method = 'post';
				form.action = '/Ad/DeleteConfirmed';

				var input = document.createElement('input');
				input.type = 'hidden';
				input.name = 'carId';
				input.value = '@TempData["CarIdToDelete"]';

				form.appendChild(input);

				// Append the form to the document body and submit it
				document.body.appendChild(form);
				form.submit();

		@TempData.Remove("ConfirmDelete")
		@TempData.Remove("CarIdToDelete")
					}
		});
	</script>
}


